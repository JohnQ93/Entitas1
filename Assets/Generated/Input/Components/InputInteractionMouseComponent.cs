//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity interactionMouseEntity { get { return GetGroup(InputMatcher.InteractionMouse).GetSingleEntity(); } }
    public Interaction.MouseComponent interactionMouse { get { return interactionMouseEntity.interactionMouse; } }
    public bool hasInteractionMouse { get { return interactionMouseEntity != null; } }

    public InputEntity SetInteractionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        if (hasInteractionMouse) {
            throw new Entitas.EntitasException("Could not set InteractionMouse!\n" + this + " already has an entity with Interaction.MouseComponent!",
                "You should check if the context already has a interactionMouseEntity before setting it or use context.ReplaceInteractionMouse().");
        }
        var entity = CreateEntity();
        entity.AddInteractionMouse(newMouse, newMouseEvent);
        return entity;
    }

    public void ReplaceInteractionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        var entity = interactionMouseEntity;
        if (entity == null) {
            entity = SetInteractionMouse(newMouse, newMouseEvent);
        } else {
            entity.ReplaceInteractionMouse(newMouse, newMouseEvent);
        }
    }

    public void RemoveInteractionMouse() {
        interactionMouseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Interaction.MouseComponent interactionMouse { get { return (Interaction.MouseComponent)GetComponent(InputComponentsLookup.InteractionMouse); } }
    public bool hasInteractionMouse { get { return HasComponent(InputComponentsLookup.InteractionMouse); } }

    public void AddInteractionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        var index = InputComponentsLookup.InteractionMouse;
        var component = (Interaction.MouseComponent)CreateComponent(index, typeof(Interaction.MouseComponent));
        component.mouse = newMouse;
        component.mouseEvent = newMouseEvent;
        AddComponent(index, component);
    }

    public void ReplaceInteractionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        var index = InputComponentsLookup.InteractionMouse;
        var component = (Interaction.MouseComponent)CreateComponent(index, typeof(Interaction.MouseComponent));
        component.mouse = newMouse;
        component.mouseEvent = newMouseEvent;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractionMouse() {
        RemoveComponent(InputComponentsLookup.InteractionMouse);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInteractionMouse;

    public static Entitas.IMatcher<InputEntity> InteractionMouse {
        get {
            if (_matcherInteractionMouse == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InteractionMouse);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInteractionMouse = matcher;
            }

            return _matcherInteractionMouse;
        }
    }
}
