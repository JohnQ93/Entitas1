//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Interaction.SpriteComponent interactionSprite { get { return (Interaction.SpriteComponent)GetComponent(GameComponentsLookup.InteractionSprite); } }
    public bool hasInteractionSprite { get { return HasComponent(GameComponentsLookup.InteractionSprite); } }

    public void AddInteractionSprite(string newSpriteName) {
        var index = GameComponentsLookup.InteractionSprite;
        var component = (Interaction.SpriteComponent)CreateComponent(index, typeof(Interaction.SpriteComponent));
        component.spriteName = newSpriteName;
        AddComponent(index, component);
    }

    public void ReplaceInteractionSprite(string newSpriteName) {
        var index = GameComponentsLookup.InteractionSprite;
        var component = (Interaction.SpriteComponent)CreateComponent(index, typeof(Interaction.SpriteComponent));
        component.spriteName = newSpriteName;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractionSprite() {
        RemoveComponent(GameComponentsLookup.InteractionSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractionSprite;

    public static Entitas.IMatcher<GameEntity> InteractionSprite {
        get {
            if (_matcherInteractionSprite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractionSprite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractionSprite = matcher;
            }

            return _matcherInteractionSprite;
        }
    }
}
