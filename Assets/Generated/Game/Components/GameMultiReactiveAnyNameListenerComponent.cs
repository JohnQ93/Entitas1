//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MultiReactiveAnyNameListenerComponent multiReactiveAnyNameListener { get { return (MultiReactiveAnyNameListenerComponent)GetComponent(GameComponentsLookup.MultiReactiveAnyNameListener); } }
    public bool hasMultiReactiveAnyNameListener { get { return HasComponent(GameComponentsLookup.MultiReactiveAnyNameListener); } }

    public void AddMultiReactiveAnyNameListener(System.Collections.Generic.List<IMultiReactiveAnyNameListener> newValue) {
        var index = GameComponentsLookup.MultiReactiveAnyNameListener;
        var component = (MultiReactiveAnyNameListenerComponent)CreateComponent(index, typeof(MultiReactiveAnyNameListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMultiReactiveAnyNameListener(System.Collections.Generic.List<IMultiReactiveAnyNameListener> newValue) {
        var index = GameComponentsLookup.MultiReactiveAnyNameListener;
        var component = (MultiReactiveAnyNameListenerComponent)CreateComponent(index, typeof(MultiReactiveAnyNameListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMultiReactiveAnyNameListener() {
        RemoveComponent(GameComponentsLookup.MultiReactiveAnyNameListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMultiReactiveAnyNameListener;

    public static Entitas.IMatcher<GameEntity> MultiReactiveAnyNameListener {
        get {
            if (_matcherMultiReactiveAnyNameListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MultiReactiveAnyNameListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMultiReactiveAnyNameListener = matcher;
            }

            return _matcherMultiReactiveAnyNameListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMultiReactiveAnyNameListener(IMultiReactiveAnyNameListener value) {
        var listeners = hasMultiReactiveAnyNameListener
            ? multiReactiveAnyNameListener.value
            : new System.Collections.Generic.List<IMultiReactiveAnyNameListener>();
        listeners.Add(value);
        ReplaceMultiReactiveAnyNameListener(listeners);
    }

    public void RemoveMultiReactiveAnyNameListener(IMultiReactiveAnyNameListener value, bool removeComponentWhenEmpty = true) {
        var listeners = multiReactiveAnyNameListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMultiReactiveAnyNameListener();
        } else {
            ReplaceMultiReactiveAnyNameListener(listeners);
        }
    }
}
