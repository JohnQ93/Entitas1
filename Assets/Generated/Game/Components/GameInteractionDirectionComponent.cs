//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Interaction.DirectionComponent interactionDirection { get { return (Interaction.DirectionComponent)GetComponent(GameComponentsLookup.InteractionDirection); } }
    public bool hasInteractionDirection { get { return HasComponent(GameComponentsLookup.InteractionDirection); } }

    public void AddInteractionDirection(float newDirection) {
        var index = GameComponentsLookup.InteractionDirection;
        var component = (Interaction.DirectionComponent)CreateComponent(index, typeof(Interaction.DirectionComponent));
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceInteractionDirection(float newDirection) {
        var index = GameComponentsLookup.InteractionDirection;
        var component = (Interaction.DirectionComponent)CreateComponent(index, typeof(Interaction.DirectionComponent));
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractionDirection() {
        RemoveComponent(GameComponentsLookup.InteractionDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractionDirection;

    public static Entitas.IMatcher<GameEntity> InteractionDirection {
        get {
            if (_matcherInteractionDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractionDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractionDirection = matcher;
            }

            return _matcherInteractionDirection;
        }
    }
}
